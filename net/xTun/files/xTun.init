#!/bin/sh /etc/rc.common
# Copyright (C) 2006-2014 OpenWrt.org

START=72
STOP=30
FIREWALL_RELOAD=0

IFACE=tun0
IP=10.0.0.2/24
SERVER=IP
PORT=PORt
PASSWORD=PASSWORD

IP_ROUTE_TABLE=xTun
FWMARK="0x02/0x02"
SETNAME=wall
CHAIN=xTun
DNS=8.8.8.8
BLACK_LIST=/etc/black_list

start() {
    xTun -i $IFACE -I $IP -k $PASSWORD -c $SERVER -p $PORT
    net_start
    acl add
}

stop() {
    net_stop
    acl del
    xTun --signal stop
}

shutdown() {
    net_stop
    acl del
    xTun --signal quit
}

net_start() {
    sysctl -w net.ipv4.ip_forward=1 >> /dev/null

    for f in /proc/sys/net/ipv4/conf/*/rp_filter; do
        echo 0 > $f
    done

    iptables -t nat -N $CHAIN > /dev/null 2>&1 || (
        iptables -t nat -D POSTROUTING -j $CHAIN
        iptables -t nat -F $CHAIN
        iptables -t nat -Z $CHAIN
    )
    iptables -t nat -A $CHAIN -o $IFACE -j MASQUERADE
    iptables -t nat -A POSTROUTING -j $CHAIN

    iptables -N $CHAIN > /dev/null 2>&1 || (
        iptables -D FORWARD -j $CHAIN
        iptables -F $CHAIN
        iptables -Z $CHAIN
    )
    iptables -I $CHAIN 1 -i $IFACE -m state --state RELATED,ESTABLISHED -j ACCEPT
    iptables -I $CHAIN 1 -o $IFACE -j ACCEPT
    iptables -I FORWARD -j $CHAIN

    iptables -t mangle -N $CHAIN > /dev/null 2>&1 || (
        iptables -t mangle -D PREROUTING -j $CHAIN
        iptables -t mangle -D OUTPUT -j $CHAIN
        iptables -t mangle -F $CHAIN
        iptables -t mangle -Z $CHAIN
    )
    ipset -N $SETNAME iphash -exist
    iptables -t mangle -A $CHAIN -m set --match-set $SETNAME dst -j MARK --set-mark $FWMARK
    iptables -t mangle -A PREROUTING -j $CHAIN
    iptables -t mangle -A OUTPUT -j $CHAIN

    ip route del default dev $IFACE table $IP_ROUTE_TABLE > /dev/null 2>&1
    xTun_rule_ids=`ip rule list | grep "lookup $IP_ROUTE_TABLE" | sed 's/://g' | awk '{print $1}'`
    for rule_id in $xTun_rule_ids
    do
        ip rule del prio $rule_id
    done

    CHKIPROUTE=$(grep $IP_ROUTE_TABLE /etc/iproute2/rt_tables)
    if [ -z "$CHKIPROUTE" ]; then
        echo "200 $IP_ROUTE_TABLE" >> /etc/iproute2/rt_tables
    fi

    ip route add default dev $IFACE table $IP_ROUTE_TABLE
    ip route list | grep -q "$DNS dev $IFACE" || ip route add $DNS dev $IFACE
    ip rule list | grep -q "fwmark $FWMARK lookup $IP_ROUTE_TABLE" || ip rule add fwmark $FWMARK table $IP_ROUTE_TABLE

    ip route flush cache
}

net_stop() {
    iptables -t nat -D POSTROUTING -j $CHAIN > /dev/null 2>&1
    iptables -t nat -F $CHAIN > /dev/null 2>&1
    iptables -t nat -X $CHAIN > /dev/null 2>&1

    iptables -D FORWARD -j $CHAIN > /dev/null 2>&1
    iptables -F $CHAIN > /dev/null 2>&1
    iptables -X $CHAIN > /dev/null 2>&1

    iptables -t mangle -D PREROUTING -j $CHAIN > /dev/null 2>&1
    iptables -t mangle -D OUTPUT -j $CHAIN > /dev/null 2>&1
    iptables -t mangle -F $CHAIN > /dev/null 2>&1
    iptables -t mangle -X $CHAIN > /dev/null 2>&1

    ip route del default dev $IFACE table $IP_ROUTE_TABLE > /dev/null 2>&1
    ip route del $DNS dev $IFACE > /dev/null 2>&1
    xTun_rule_ids=`ip rule list | grep "lookup $IP_ROUTE_TABLE" | sed 's/://g' | awk '{print $1}'`
    for rule_id in $xTun_rule_ids
    do
        ip rule del prio $rule_id
    done

    ip route flush cache
}

acl() {
    if [ ! -f $BLACK_LIST ]; then
        exit 1
    fi

    while read line;do
        [ -z "$line" ] && continue
        case "$line" in \#*) continue ;; esac
        ipset $1 $SETNAME $line --exist
    done < $BLACK_LIST
}
